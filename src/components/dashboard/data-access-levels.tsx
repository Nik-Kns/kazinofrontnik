"use client";

import { useState } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Check, Lock, Unlock, Database, Cable, ChartBar, Brain, Zap, ArrowRight } from "lucide-react";
import { cn } from "@/lib/utils";

const dataLevels = [
  {
    level: 1,
    title: "–†—É—á–Ω–∞—è –≤—ã–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö",
    icon: Database,
    status: "active",
    description: "CSV/Excel –æ—Ç—á–µ—Ç—ã",
    benefits: [
      "–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –±–µ–∑ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
      "–ë–∞–∑–æ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã –ø–æ —Å–µ–≥–º–µ–Ω—Ç–∞–º",
      "–ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∫–∞–º–ø–∞–Ω–∏–π"
    ],
    requirements: "–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –≤—ã–≥—Ä—É–∑–∫–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤"
  },
  {
    level: 2,
    title: "CRM API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è",
    icon: Cable,
    status: "active",
    description: "Real-time –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–æ–≤",
    benefits: [
      "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã",
      "–°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
      "Welcome-–≤–æ—Ä–æ–Ω–∫–∏ –∏ —Ä–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è"
    ],
    requirements: "API –¥–æ—Å—Ç—É–ø –∫ CRM –∏–ª–∏ –∞–¥–º–∏–Ω–∫–µ"
  },
  {
    level: 3,
    title: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ",
    icon: ChartBar,
    status: "active",
    description: "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ –∫–∞–Ω–∞–ª—ã",
    benefits: [
      "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º",
      "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–∞–Ω–∞–ª–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏",
      "–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ —á–∞—Å–æ–≤—ã–º –ø–æ—è—Å–∞–º"
    ],
    requirements: "–î–∞–Ω–Ω—ã–µ –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –∏ —Ç—Ä–∞—Ñ–∏–∫–µ"
  },
  {
    level: 4,
    title: "–ü—Ä–æ–¥—É–∫—Ç–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
    icon: Brain,
    status: "active",
    description: "–ò–≥—Ä–æ–≤–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ",
    benefits: [
      "–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ã–µ —Å–µ–≥–º–µ–Ω—Ç—ã",
      "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –±–æ–Ω—É—Å–æ–≤ –ø–æ –∏–≥—Ä–∞–º",
      "ROI –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –æ—Ñ—Ñ–µ—Ä–æ–≤"
    ],
    requirements: "–ò—Å—Ç–æ—Ä–∏—è –∏–≥—Ä–æ–≤—ã—Ö —Å–µ—Å—Å–∏–π"
  },
  {
    level: 5,
    title: "–ü—Ä–µ–¥–∏–∫—Ç–∏–≤–Ω—ã–π AI –º–æ–¥—É–ª—å",
    icon: Zap,
    status: "locked",
    description: "–ü–æ–ª–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è",
    benefits: [
      "–ü—Ä–æ–≥–Ω–æ–∑—ã churn –∏ LTV",
      "Autopilot –¥–ª—è —Å–µ–≥–º–µ–Ω—Ç–æ–≤",
      "–ì–∏–ø–µ—Ä–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è"
    ],
    requirements: "–ü–æ–ª–Ω—ã–π —Å–∏–Ω—Ö—Ä–æ–Ω –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞ 6-12 –º–µ—Å—è—Ü–µ–≤",
    special: true
  }
];

export function DataAccessLevels() {
  const [unlockedLevel5, setUnlockedLevel5] = useState(false);
  const completedPercent = 80; // –ø—Ä–∏–º–µ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

  const handleUnlock = () => {
    setUnlockedLevel5(true);
  };

  return (
    <Card className="overflow-hidden">
      <CardHeader className="pb-4">
        <div className="flex items-center justify-between">
          <div>
            <CardTitle className="text-2xl">5 —É—Ä–æ–≤–Ω–µ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö</CardTitle>
            <CardDescription>
              –ß–µ–º –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö ‚Äî —Ç–µ–º —Ç–æ—á–Ω–µ–µ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –≤—ã—à–µ ROI
            </CardDescription>
          </div>
          <div className="flex items-center gap-3">
            <div className="w-36">
              <div className="h-2 w-full rounded-full bg-muted">
                <div className="h-2 rounded-full bg-primary" style={{ width: `${completedPercent}%` }} />
              </div>
              <div className="mt-1 text-xs text-muted-foreground">–ü—Ä–æ–≥—Ä–µ—Å—Å {completedPercent}%</div>
            </div>
            <Badge variant="secondary" className="px-3 py-1">
              <Database className="mr-1 h-3 w-3" />
              –£—Ä–æ–≤–µ–Ω—å 4/5
            </Badge>
          </div>
        </div>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="grid gap-4">
          {dataLevels.map((item) => {
            const Icon = item.icon;
            const isLocked = item.status === "locked" && !unlockedLevel5;
            const isLevel5 = item.level === 5;
            
            return (
              <div
                key={item.level}
                className={cn(
                  "relative rounded-lg border p-4 transition-all",
                  isLocked ? "border-muted bg-muted/30" : "border-primary/5 bg-gradient-to-r from-primary/5 to-background",
                  isLevel5 && unlockedLevel5 && "border-green-500 bg-green-50 animate-pulse-once"
                )}
              >
                <div className="flex items-start gap-4">
                  <div className={cn(
                    "flex h-12 w-12 items-center justify-center rounded-lg",
                    isLocked ? "bg-muted" : "bg-primary/10"
                  )}>
                    {isLocked ? (
                      <Lock className="h-6 w-6 text-muted-foreground" />
                    ) : (
                      <Icon className={cn(
                        "h-6 w-6",
                        isLevel5 && unlockedLevel5 ? "text-green-600" : "text-primary"
                      )} />
                    )}
                  </div>
                  
                  <div className="flex-1 space-y-2">
                    <div className="flex items-center gap-2">
                      <h3 className={cn(
                        "font-semibold",
                        isLocked && "text-muted-foreground"
                      )}>
                        –£—Ä–æ–≤–µ–Ω—å {item.level}: {item.title}
                      </h3>
                      {item.special && (
                        <Badge variant={isLocked ? "outline" : "default"} className="ml-2">
                          {isLocked ? "–¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å 4" : "–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ!"}
                        </Badge>
                      )}
                    </div>
                    
                    <p className={cn(
                      "text-sm",
                      isLocked ? "text-muted-foreground" : "text-muted-foreground"
                    )}>
                      {item.description}
                    </p>
                    
                    <div className="flex flex-wrap gap-2 pt-2">
                      {item.benefits.map((benefit, idx) => (
                        <div
                          key={idx}
                          className={cn(
                            "flex items-center gap-1 text-xs",
                            isLocked ? "text-muted-foreground" : "text-primary"
                          )}
                        >
                          <Check className="h-3 w-3" />
                          <span>{benefit}</span>
                        </div>
                      ))}
                    </div>
                    
                    <div className="pt-2">
                      <p className="text-xs text-muted-foreground">
                        <span className="font-medium">–¢—Ä–µ–±—É–µ—Ç—Å—è:</span> {item.requirements}
                      </p>
                    </div>
                  </div>
                  
                  {item.level < 5 && (
                    <Check className="h-5 w-5 text-green-600" />
                  )}
                  
                  {isLevel5 && isLocked && (
                    <Button
                      size="sm"
                      variant="default"
                      onClick={handleUnlock}
                      className="animate-pulse"
                    >
                      <Unlock className="mr-1 h-4 w-4" />
                      –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å
                    </Button>
                  )}
                  
                  {isLevel5 && unlockedLevel5 && (
                    <Button size="sm" variant="default" className="bg-green-600 hover:bg-green-700">
                      –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ
                      <ArrowRight className="ml-1 h-4 w-4" />
                    </Button>
                  )}
                </div>
                
                {isLevel5 && unlockedLevel5 && (
                  <div className="mt-4 rounded-lg bg-green-100 p-4 border border-green-200">
                    <h4 className="font-semibold text-green-900 mb-2">
                      üéâ –ü—Ä–µ–¥–∏–∫—Ç–∏–≤–Ω—ã–π AI –º–æ–¥—É–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!
                    </h4>
                    <p className="text-sm text-green-800 mb-3">
                      –¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã 3 —Å—Ü–µ–Ω–∞—Ä–∏—è —Ä–∞–∑–≤–∏—Ç–∏—è –≤–∞—à–∏—Ö –º–µ—Ç—Ä–∏–∫:
                    </p>
                    <div className="grid grid-cols-3 gap-2">
                      <div className="text-center p-2 bg-white rounded border border-green-300">
                        <div className="text-xs font-medium text-green-700">–¢–µ–∫—É—â–∏–π —Ç—Ä–µ–Ω–¥</div>
                        <div className="text-lg font-bold text-red-600">-15%</div>
                        <div className="text-xs text-muted-foreground">–∑–∞ 3 –º–µ—Å—è—Ü–∞</div>
                      </div>
                      <div className="text-center p-2 bg-white rounded border border-green-300">
                        <div className="text-xs font-medium text-green-700">–° –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π</div>
                        <div className="text-lg font-bold text-yellow-600">+5%</div>
                        <div className="text-xs text-muted-foreground">–∑–∞ 3 –º–µ—Å—è—Ü–∞</div>
                      </div>
                      <div className="text-center p-2 bg-white rounded border border-green-300">
                        <div className="text-xs font-medium text-green-700">–ò–¥–µ–∞–ª—å–Ω—ã–π</div>
                        <div className="text-lg font-bold text-green-600">+25%</div>
                        <div className="text-xs text-muted-foreground">–∑–∞ 3 –º–µ—Å—è—Ü–∞</div>
                      </div>
                    </div>
                  </div>
                )}
              </div>
            );
          })}
        </div>
        
        <div className="mt-6 p-4 rounded-lg bg-muted/50 border border-muted">
          <p className="text-sm text-muted-foreground">
            <span className="font-medium">üí° –°–æ–≤–µ—Ç:</span> –ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–∞–Ω–Ω—ã—Ö —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Ç–æ—á–Ω–æ—Å—Ç—å AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –Ω–∞ 15-20% –∏ ROI –∫–∞–º–ø–∞–Ω–∏–π –Ω–∞ 10-30%
          </p>
        </div>
      </CardContent>
    </Card>
  );
}