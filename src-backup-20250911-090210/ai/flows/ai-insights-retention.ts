// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview This file defines a Genkit flow for providing AI-driven insights on retention trends.
 *
 * - getRetentionInsights - A function that uses AI to analyze retention data and provide actionable insights.
 * - RetentionInsightsInput - The input type for the getRetentionInsights function.
 * - RetentionInsightsOutput - The return type for the getRetentionInsights function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RetentionInsightsInputSchema = z.object({
  kpiData: z.string().describe('A JSON string containing key performance indicator data related to retention, such as daily retention rates, churn rates, and reactivation rates.'),
  userSegments: z.string().describe('A JSON string containing information about different user segments, including their size, engagement levels, and revenue contribution.'),
  crmActivity: z.string().describe('A JSON string containing data on recent CRM activities, including campaign performance, communication channels used, and target audiences.'),
  timePeriod: z.string().describe('The time period for which retention insights are requested (e.g., last 7 days, last 30 days).'),
});
export type RetentionInsightsInput = z.infer<typeof RetentionInsightsInputSchema>;

const RetentionInsightsOutputSchema = z.object({
  summary: z.string().describe('A concise summary of the key retention trends observed in the provided data.'),
  keyOpportunities: z.array(z.string()).describe('A list of actionable opportunities to improve player retention strategies, based on the identified trends.'),
  riskFactors: z.array(z.string()).describe('A list of potential risk factors that could negatively impact retention if not addressed.'),
  recommendedActions: z.array(z.string()).describe('A list of specific actions that can be taken to capitalize on opportunities and mitigate risks.'),
});
export type RetentionInsightsOutput = z.infer<typeof RetentionInsightsOutputSchema>;

export async function getRetentionInsights(input: RetentionInsightsInput): Promise<RetentionInsightsOutput> {
  return retentionInsightsFlow(input);
}

const retentionInsightsPrompt = ai.definePrompt({
  name: 'retentionInsightsPrompt',
  input: {schema: RetentionInsightsInputSchema},
  output: {schema: RetentionInsightsOutputSchema},
  prompt: `You are an expert in player retention for mobile games. Your task is to analyze the provided data and identify opportunities to improve retention strategies.

  Analyze the following data:
  Time Period: {{{timePeriod}}}
  KPI Data: {{{kpiData}}}
  User Segments: {{{userSegments}}}
  CRM Activity: {{{crmActivity}}}

  Based on your analysis, provide the following:
  - A concise summary of the key retention trends observed in the data.
  - A list of actionable opportunities to improve player retention strategies, based on the identified trends.
  - A list of potential risk factors that could negatively impact retention if not addressed.
  - A list of specific actions that can be taken to capitalize on opportunities and mitigate risks.

  Ensure that the opportunities and actions are specific, measurable, achievable, relevant, and time-bound (SMART).
  `,
});

const retentionInsightsFlow = ai.defineFlow(
  {
    name: 'retentionInsightsFlow',
    inputSchema: RetentionInsightsInputSchema,
    outputSchema: RetentionInsightsOutputSchema,
  },
  async input => {
    const {output} = await retentionInsightsPrompt(input);
    return output!;
  }
);
